<template>
  <div class="list-box">
    <div class="page-head">
      <<%=getBigModuleTitle(moduleConf.nameEn) %>Search @search="search">
        <el-button
          type="primary"
          v-if="btnShow('add-<%=getSmallModuleTitle(moduleConf.nameEn) %>')"
          @click="add()">
          新增
        </el-button>
      </<%=getBigModuleTitle(moduleConf.nameEn) %>Search>
    </div>
    <el-table v-loading="listLoading" :data="list" row-key="_id">
      <el-table-column width="80" label="序号">
        <template #default="scope">
          {{ (params.pageIndex - 1) * params.pageSize + scope.$index + 1 }}
        </template>
      </el-table-column><% for(let i=0;i<fieldList.length;i++) {%><% if(fieldList[i].listShow) {%>
      <el-table-column prop="<%=fieldList[i].nameEn %>" label="<%=fieldList[i].name %>">
        <template #default="scope"><% if (fieldList[i].dom=="Switch") {%>
          <el-switch disabled v-model="scope.row.<%=fieldList[i].nameEn %>" />
          <% }else if(["Select","Radio","TreeSelect","AdministrativeDivision"].includes(fieldList[i].dom)) {%>
          {{ scope.row.<%=fieldList[i].nameEn %>Text }}
          <% }else if(["MoreSelect","Checkbox","MoreTreeSelect"].includes(fieldList[i].dom)) {%>
            <div v-html="scope.row.<%=fieldList[i].nameEn %>Text.split(',').join('<br>')"></div>
          <% }else if(fieldList[i].dom == "Rate") { %>
          <el-rate disabled v-model="scope.row.<%=fieldList[i].nameEn %>" :max="5"/>
          <% } else if(fieldList[i].dom == "Image") { %>
          <el-image
            style="width: 100px; height: 100px"
            preview-teleported="true"
            v-if="scope.row.<%=fieldList[i].nameEn %>"
            :src="`/api${scope.row.<%=fieldList[i].nameEn %>.split(';')[0].split(',')[1]}`"
            :zoom-rate="0.8"
            :preview-src-list="scope.row.<%=fieldList[i].nameEn %>.split(';').map((item: string) => item.split(',')[1] ? `/api${item.split(',')[1]}` : '').filter((item: any) => Boolean(item))"
            fit="cover"
            loading="lazy"
          />
          <% } else if(fieldList[i].dom == "PrivateImage") { %>
            <PrivateImage
            :srcArr="scope.row.<%=fieldList[i].nameEn %>.split(';').map((item: string) => item.split(',')[1] ? `/api${item.split(',')[1]}` : '').filter((item: any) => Boolean(item))"
          />
            <% } else { %>
          {{ scope.row.<%=fieldList[i].nameEn %> }}<% } %>
        </template>
      </el-table-column><% } %><% } %>
      <el-table-column prop="addDate" label="添加时间">
        <template #default="scope">
          {{
            DateTime.fromISO(scope.row.addDate, { zone: "utc+8" }).toFormat(
              "yyyy-MM-dd HH:mm:ss"
            )
          }}
        </template>
      </el-table-column>
      <el-table-column label="操作" width="310">
        <template #default="scope">
          <el-button-group class="ml-4">
            <el-button
              v-if="btnShow('edit-<%=getSmallModuleTitle(moduleConf.nameEn) %>')"
              type="primary"
              :icon="Edit"
              @click="edit(scope.row)"
              >编辑
            </el-button>
            <el-popconfirm
              confirm-button-text="确定"
              cancel-button-text="取消"
              confirm-button-type="danger"
              title="确定删除？"
              @confirm="del(scope.row,scope.$index)"
            >
              <template #reference>
                <el-button
                  v-loading="delLoading==scope.$index"
                  v-if="btnShow('delete-<%=getSmallModuleTitle(moduleConf.nameEn) %>')"
                  type="danger"
                  :icon="Delete">
                  删除
                </el-button>
              </template>
            </el-popconfirm>
          </el-button-group>
        </template>
      </el-table-column>
    </el-table>
    <div class="pagination-box">
      <el-pagination
        v-model:currentPage="params.pageIndex"
        v-model:page-size="params.pageSize"
        :page-sizes="[10, 20, 30, 40, 50]"
        background
        layout="total, sizes, prev, pager, next, jumper"
        :total="total"
        :hide-on-single-page="true"
        @size-change="sizeChange"
        @current-change="currentChange"
      />
    </div>
    <<%=getBigModuleTitle(moduleConf.nameEn) %>Form ref="<%=getSmallModuleTitle(moduleConf.nameEn) %>FormRef" @Refresh="getPage" />
  </div>
</template>
<script lang="ts">
// 路由地址 默认全部挂载到 business
// 名称:<%=moduleConf.name %>
// 路由地址:/business/<%=getSmallModuleTitle(moduleConf.nameEn) %>
// {
//   path: '<%=getSmallModuleTitle(moduleConf.nameEn) %>',
//   component: () => import('@/views/<%=getSmallModuleTitle(moduleConf.nameEn) %>/Index.vue'),
//   name: '<%=getSmallModuleTitle(moduleConf.nameEn) %>',
//   meta: { title: '<%=moduleConf.name %>' }
// },
// 接口权限：
// 创建<%=moduleConf.name %>:create<%=getBigModuleTitle(moduleConf.nameEn) %>
// 编辑<%=moduleConf.name %>:update<%=getBigModuleTitle(moduleConf.nameEn) %>
// 删除<%=moduleConf.name %>:delete<%=getBigModuleTitle(moduleConf.nameEn) %>ById
// 根据id获取<%=moduleConf.name %>详情:get<%=getBigModuleTitle(moduleConf.nameEn) %>ById
// 获取<%=moduleConf.name %>分页:get<%=getBigModuleTitle(moduleConf.nameEn) %>Page
// 按钮权限
// 添加<%=moduleConf.name %>:add-<%=getSmallModuleTitle(moduleConf.nameEn) %>
// 编辑<%=moduleConf.name %>:edit-<%=getSmallModuleTitle(moduleConf.nameEn) %>
// 删除<%=moduleConf.name %>:delete-<%=getSmallModuleTitle(moduleConf.nameEn) %>
// 保存或更新<%=moduleConf.name %>:save-<%=getSmallModuleTitle(moduleConf.nameEn) %>
// 组件名称
export default {
  name: "<%=getSmallModuleTitle(moduleConf.nameEn) %>",
};
</script>
<script lang="ts" setup>
import { ref } from "vue";
import axios from "axios";
import PrivateImage from "@/views/components/PrivateImage.vue";
import { Delete, Edit } from "@element-plus/icons-vue";
import { btnShow } from "@/utils/buttonShow";
import <%=getBigModuleTitle(moduleConf.nameEn) %>Form from "@/views/<%=getSmallModuleTitle(moduleConf.nameEn) %>/components/<%=getBigModuleTitle(moduleConf.nameEn) %>Form.vue";
import <%=getBigModuleTitle(moduleConf.nameEn) %>Search from "@/views/<%=getSmallModuleTitle(moduleConf.nameEn) %>/components/<%=getBigModuleTitle(moduleConf.nameEn) %>Search.vue";
import {
  <%=getBigModuleTitle(moduleConf.nameEn) %>ControllerGetPage,
  <%=getBigModuleTitle(moduleConf.nameEn) %>ControllerDelete,
} from "@/api/<%=getBigModuleTitle(moduleConf.nameEn) %>ControllerApi";
import type { <%=getBigModuleTitle(moduleConf.nameEn) %>Dto } from "@/api/dto/<%=getBigModuleTitle(moduleConf.nameEn) %>Dto";
import { DateTime } from "luxon";
import { alertSuccess,alertWarning } from "@/utils/message";
const <%=getSmallModuleTitle(moduleConf.nameEn) %>FormRef = ref();
const listLoading = ref(false);
const list = ref(new Array<<%=getBigModuleTitle(moduleConf.nameEn) %>Dto>());
const total = ref(0);
const params = ref(
  {
    pageIndex: 1,
    pageSize: 10,
    keyWord: "",
    <% for (let i = 0; i < searchNoLike.length; i++) {%><%=searchNoLike[i].fieldEnName %>:<% if(searchNoLike[i].fieldType.indexOf('[')!=-1){ %>[] as <%=searchNoLike[i].fieldType%><%} else {%> ""<%}%>,
    <%} %>
  }
)
const edit = (item: <%=getBigModuleTitle(moduleConf.nameEn) %>Dto) => {
  <%=getSmallModuleTitle(moduleConf.nameEn) %>FormRef.value.open(item);
};
const add = () => {
  <%=getSmallModuleTitle(moduleConf.nameEn) %>FormRef.value.open();
}
type SearchDto = {
  keyWord: string,
  <% for (let i = 0; i < searchNoLike.length; i++) {%><%=searchNoLike[i].fieldEnName %>:<% if(searchNoLike[i].fieldType.indexOf('[')!=-1){ %>[] as <%=searchNoLike[i].fieldType%><%} else {%> ""<%}%>,
    <%} %>
}
const search = async (searchDto: SearchDto) => {
  params.value.keyWord = searchDto.keyWord;
  <% for (let i = 0; i < searchNoLike.length; i++) {%>params.value.<%=searchNoLike[i].fieldEnName %> = searchDto.<%=searchNoLike[i].fieldEnName %>;<%} %>
  getPage();
};

const delLoading = ref(-1)
const del = async (item: <%=getBigModuleTitle(moduleConf.nameEn) %>Dto,index: number) => {
  if (!item._id) {
    throw new Error("id不能为空");
  }
  delLoading.value = index;
  const {
      data: { status, message },
  } = await <%=getBigModuleTitle(moduleConf.nameEn) %>ControllerDelete(item._id);
  delLoading.value = -1;
  if (status === 1) {
      alertSuccess("操作成功!");
      getPage();
  } else {
      alertWarning(message);
  }
};

const getPage = async () => {
  listLoading.value = true;
  const {
      data: { status, data, message },
  } = await <%=getBigModuleTitle(moduleConf.nameEn) %>ControllerGetPage(params.value);
  listLoading.value = false;
  if (status === 1) {
    list.value = data.list;
    total.value =data.total;
  }else{
    alertWarning(message);
  }
};
getPage();
const sizeChange = (val: number) => {
  params.value.pageSize = val;
  getPage();
};
const currentChange = (val: number) => {
  params.value.pageIndex = val;
  getPage();
};
</script>
<style lang="scss" scoped>
.list-box {
  padding: 20px;
}

.page-head {
  display: flex;
  justify-content: flex-start;
  align-items: center;
  padding: 20px 0;

  .btn {
    margin-bottom: 18px !important;
  }
}

.pagination-box {
  padding: 20px;
  display: flex;
  justify-content: center;
}
</style>
